version: '3.9'

services:
  sql-server:
    image: mcr.microsoft.com/azure-sql-edge:latest
    privileged: true
    container_name: sql-server-1
    environment:
      - ACCEPT_EULA=1
      - MSSQL_SA_PASSWORD=Thang191042!   # mật khẩu phải có số, chữ hoa, chữ thường và ký tự đặc biệt
    ports:
      - "1433:1433"                       # map port 1433 host -> container
    volumes:
      - sql-server-data:/var/opt/mssql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "Thang191042!", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - app-network
    depends_on:
      sql-server:
        condition: service_healthy

  apigateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: apigateway
    ports:
      - "8900:8900"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    networks:
      - app-network
    depends_on:
      eureka-server:
        condition: service_started

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8811:8811"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sql-server:1433;databaseName=users;encrypt=true;trustServerCertificate=true;characterEncoding=UTF-8
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=Thang191042!
    networks:
      - app-network
    depends_on:
      sql-server:
        condition: service_healthy
      eureka-server:
        condition: service_started

  product-catalog-service:
    build:
      context: ./product-catalog-service
      dockerfile: Dockerfile
    container_name: product-catalog-service
    ports:
      - "8810:8810"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sql-server:1433;databaseName=product_catalog;encrypt=true;trustServerCertificate=true;characterEncoding=UTF-8
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=Thang191042!
    networks:
      - app-network
    depends_on:
      sql-server:
        condition: service_healthy
      eureka-server:
        condition: service_started

  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    container_name: cart-service
    ports:
      - "8902:8902"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sql-server:1433;databaseName=cart;encrypt=true;trustServerCertificate=true;characterEncoding=UTF-8
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=Thang191042!
    networks:
      - app-network
    depends_on:
      sql-server:
        condition: service_healthy
      eureka-server:
        condition: service_started
      product-catalog-service:
        condition: service_started

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8812:8812"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sql-server:1433;databaseName=orders;encrypt=true;trustServerCertificate=true;characterEncoding=UTF-8
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=Thang191042!
      - JWT_SECRET=rainbowforest-secure-key-should-be-very-long-and-complex-for-production-use
    networks:
      - app-network
    depends_on:
      sql-server:
        condition: service_healthy
      eureka-server:
        condition: service_started
      product-catalog-service:
        condition: service_started

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    networks:
      - app-network
    depends_on:
      apigateway:
        condition: service_started

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  sql-server-data:
