

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    environment:
      - VITE_API_GATEWAY_URL=http://api-gateway:8900
    depends_on:
      api-gateway:
        condition: service_started
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8900:8900"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_REDIS_HOST=redis
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka
    depends_on:
      redis:
        condition: service_healthy
      eureka-server:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka
      - SPRING_APPLICATION_JSON={"server":{"undertow":{"threads":{"io":16,"worker":128}}}}
    deploy:
      resources:
        limits:
          cpus: "0.6" # Tăng nhẹ để đảm bảo Eureka chạy ổn định
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8811:8811"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sql-server:1433;databaseName=users;encrypt=true;trustServerCertificate=true;createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=${SQL_SA_PASSWORD}
    depends_on:
      sql-server:
        condition: service_healthy
      eureka-server:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  product-catalog-service:
    build:
      context: ./product-catalog-service
      dockerfile: Dockerfile
    ports:
      - "8810:8810"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sql-server:1433;databaseName=product_catalog;encrypt=true;trustServerCertificate=true;createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=${SQL_SA_PASSWORD}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
    depends_on:
      sql-server:
        condition: service_healthy
      eureka-server:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    ports:
      - "8902:8902"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sql-server:1433;databaseName=cart;encrypt=true;trustServerCertificate=true;createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=${SQL_SA_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      sql-server:
        condition: service_healthy
      eureka-server:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8812:8812"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sql-server:1433;databaseName=orders;encrypt=true;trustServerCertificate=true;createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=${SQL_SA_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - API_GATEWAY_URL=http://api-gateway:8900
    depends_on:
      sql-server:
        condition: service_healthy
      eureka-server:
        condition: service_started
      api-gateway:
        condition: service_started
      product-catalog-service:
        condition: service_started
      cart-service:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  sql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD="Thang191042!"
      - MSSQL_PID=Express
    ports:
      - "14333:1433"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "Thang191042!", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mssql-data:/var/opt/mssql
    deploy:
      resources:
        limits:
          cpus: "1.2"
          memory: 2.5G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

volumes:
  mssql-data:
  redis-data:

networks:
  app-network:
    driver: bridge