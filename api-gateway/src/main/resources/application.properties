# Server Configuration
server.port=8900
spring.application.name=api-gateway

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true

# Spring Cloud Gateway Routes Configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# User Service Route
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/accounts/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/accounts/(?<segment>.*), /$\{segment}

# Product Catalog Service Route
spring.cloud.gateway.routes[1].id=product-catalog-service
spring.cloud.gateway.routes[1].uri=lb://product-catalog-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/catalog/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/catalog/(?<segment>.*), /$\{segment}

# Order Service Route
spring.cloud.gateway.routes[2].id=order-service
spring.cloud.gateway.routes[2].uri=lb://order-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/shop/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/api/shop/(?<segment>.*), /$\{segment}

# Product Recommendation Service Route
spring.cloud.gateway.routes[3].id=product-recommendation-service
spring.cloud.gateway.routes[3].uri=lb://product-recommendation-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/review/**
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/api/review/(?<segment>.*), /$\{segment}

# Circuit Breaker Configuration
spring.cloud.gateway.routes[0].filters[1]=CircuitBreaker=userServiceCircuitBreaker
spring.cloud.gateway.routes[1].filters[1]=CircuitBreaker=catalogServiceCircuitBreaker
spring.cloud.gateway.routes[2].filters[1]=CircuitBreaker=orderServiceCircuitBreaker
spring.cloud.gateway.routes[3].filters[1]=CircuitBreaker=recommendationServiceCircuitBreaker

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.failureRateThreshold=50

# T??ng t? cho các service khác
resilience4j.circuitbreaker.instances.catalogServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.catalogServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.catalogServiceCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.catalogServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.catalogServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.catalogServiceCircuitBreaker.failureRateThreshold=50

resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.failureRateThreshold=50

resilience4j.circuitbreaker.instances.recommendationServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.recommendationServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.recommendationServiceCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.recommendationServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.recommendationServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.recommendationServiceCircuitBreaker.failureRateThreshold=50

# Redis Configuration
spring.session.store-type=redis
spring.session.redis.namespace=session
spring.session.redis.flush-mode=on-save
spring.redis.host=localhost
spring.redis.port=6379

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,circuitbreakers
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true
