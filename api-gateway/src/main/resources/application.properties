# Server Configuration
server.port=8900
spring.application.name=api-gateway

# Eureka Client Configuration
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8761/eureka}
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=${HOSTNAME:api-gateway}

# Spring Cloud Gateway Routes Configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.failureRateThreshold=50

resilience4j.circuitbreaker.instances.catalogServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.catalogServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.catalogServiceCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.catalogServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.catalogServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.catalogServiceCircuitBreaker.failureRateThreshold=50

resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.failureRateThreshold=50

resilience4j.circuitbreaker.instances.recommendationServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.recommendationServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.recommendationServiceCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.recommendationServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.recommendationServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.recommendationServiceCircuitBreaker.failureRateThreshold=50

resilience4j.circuitbreaker.instances.statisticsServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.statisticsServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.statisticsServiceCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.statisticsServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.statisticsServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.statisticsServiceCircuitBreaker.failureRateThreshold=50

# Redis Configuration
spring.session.store-type=redis
spring.session.redis.namespace=session
spring.session.redis.flush-mode=on-save
spring.redis.host=${SPRING_REDIS_HOST:localhost}
spring.redis.port=${SPRING_REDIS_PORT:6379}
spring.redis.timeout=2000ms
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=0

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,circuitbreakers,gateway
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# Gateway Configuration
spring.cloud.gateway.httpclient.max-header-size=50KB
spring.cloud.gateway.httpclient.max-initial-line-length=50KB
spring.cloud.gateway.request-body-size-limit=50MB

# Logging
logging.level.org.springframework.cloud.gateway=INFO
logging.level.reactor.netty=INFO
logging.level.com.rainbowforest.apigateway=DEBUG
